/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int data;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int val) { data = val; left = null, right = null }
 * }
 **/

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        //your code goes here
         List<List<Integer>> answer = new ArrayList();

        if (root == null) {
            return answer;
        }
        
        Queue<TreeNode> queue = new LinkedList();
        queue.offer(root);
        boolean leftToRight=true;

        while (queue.size() > 0) {
            int numElements = queue.size();
            List<Integer> currentLevel = new ArrayList(Collections.nCopies(numElements, 0));
        
            for (int i = 0; i < numElements; ++i) {
                TreeNode element = queue.poll();

               int index=leftToRight?i:numElements-i-1;
               currentLevel.set(index,element.data);

                if (element.left != null) {
                    queue.offer(element.left);
                }
                if (element.right != null) {
                    queue.offer(element.right);
                }
            }
         leftToRight=!leftToRight;
            answer.add(currentLevel);
        }

        return answer;
    }
}
